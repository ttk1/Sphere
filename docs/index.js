!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(1);window.onload=()=>{const t=document.getElementById("canvas");t.width=500,t.height=500;const e=t.getContext("webgl2");function o(t,n){const r=e.createShader(t);if(e.shaderSource(r,n),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS))throw new Error(e.getShaderInfoLog(r));return r}e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT);const a=e.createProgram(),i=o(e.VERTEX_SHADER,n(3).default);e.attachShader(a,i);const s=o(e.FRAGMENT_SHADER,n(4).default);e.attachShader(a,s),e.linkProgram(a),e.useProgram(a);const u=e.getUniformLocation(a,"size");e.uniform2f(u,t.width,t.height);let l=null,c=null,f=r.rotation(0,0,0);const d=e.getUniformLocation(a,"rot");e.uniformMatrix4fv(d,!1,f.toArray()),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4),t.addEventListener("mousemove",(function(t){let n,o;null==l||null==c?(n=t.offsetX,o=t.offsetY):(n=l-t.offsetX,o=c-t.offsetY);l=t.offsetX,c=t.offsetY,f=r.rotation(.02*o,.02*n,0).mul(f),e.uniformMatrix4fv(d,!1,f.toArray()),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4)}),!1)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(2);e.rotation=function(t,e,n){const o=new r.Mat4(4,4);o.setValue(0,0,1),o.setValue(1,1,Math.cos(t)),o.setValue(2,1,-Math.sin(t)),o.setValue(1,2,Math.sin(t)),o.setValue(2,2,Math.cos(t)),o.setValue(3,3,1);const a=new r.Mat4(4,4);a.setValue(0,0,Math.cos(e)),a.setValue(2,0,Math.sin(e)),a.setValue(1,1,1),a.setValue(0,2,-Math.sin(e)),a.setValue(2,2,Math.cos(e)),a.setValue(3,3,1);const i=new r.Mat4(4,4);return i.setValue(0,0,Math.cos(n)),i.setValue(1,0,-Math.sin(n)),i.setValue(0,1,Math.sin(n)),i.setValue(1,1,Math.cos(n)),i.setValue(2,2,1),i.setValue(3,3,1),o.mul(a).mul(i)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class r{constructor(t,e){this.m=t,this.n=e,this.init()}toArray(){const t=[];for(let e=0;e<this.m;e++)for(let n=0;n<this.n;n++)t[e+this.m*n]=this.matrix[e][n];return t}getValue(t,e){return this.matrix[t][e]}setValue(t,e,n){this.matrix[t][e]=n}mul(t){if(this.n!==t.m)throw new Error("サイズの不一致");const e=new r(this.m,t.n);for(let r=0;r<this.m;r++)for(let o=0;o<t.n;o++)e.setValue(r,o,n(r,o,this,t));return e;function n(t,e,n,r){let o=0;for(let a=0;a<n.n;a++)o+=n.getValue(t,a)*r.getValue(a,e);return o}}init(){this.matrix=[];for(let t=0;t<this.m;t++){this.matrix[t]=[];for(let e=0;e<this.n;e++)this.matrix[t][e]=0}}}e.Mat4=r},function(t,e,n){"use strict";n.r(e),e.default="#version 300 es\n\nconst vec4 p[] = vec4[](\n\tvec4(1.0, -1.0, 0.0, 1.0),\n\tvec4(1.0, 1.0, 0.0, 1.0),\n\tvec4(-1.0, 1.0, 0.0, 1.0),\n\tvec4(-1.0, -1.0, 0.0, 1.0)\n);\n\nin float a;\n\nvoid main() {\n  gl_Position = p[gl_VertexID];\n}\n"},function(t,e,n){"use strict";n.r(e),e.default="#version 300 es\n\nprecision mediump float;\n\nout vec4 color;\nuniform vec2 size;\nuniform mat4 rot;\n\nconst vec4 ray = vec4(1.0, 1.0, 0.0, 1.0);\nconst float radius = 0.8;\n\nvoid main() {\n  vec2 p = ((gl_FragCoord.xy / size) * 2.0 - 1.0) / radius;\n  if (length(p) < 1.0) {\n    float intensity = dot(normalize(vec3(rot * ray)), vec3(p, sqrt(1.0 - dot(p, p))));\n    color = vec4(vec3(1.0, 0.98, 0.8) * intensity, 1.0);\n  } else {\n    discard;\n  }\n}\n"}]);